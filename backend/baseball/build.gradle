plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.newbie'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.amqp:spring-rabbit-test'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
	implementation 'com.fasterxml.jackson.module:jackson-module-jakarta-xmlbind-annotations'
	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	// youtube
	implementation 'com.google.api-client:google-api-client:1.34.0'
	implementation 'com.google.oauth-client:google-oauth-client-jetty:1.34.1'
	implementation 'com.google.apis:google-api-services-youtube:v3-rev20230816-2.0.0'
	implementation 'com.google.http-client:google-http-client-jackson2:1.42.0'
	// S3
	implementation 'io.awspring.cloud:spring-cloud-aws-starter-s3:3.1.1'
	// RabbitMQ
	implementation 'org.springframework.boot:spring-boot-starter-amqp'

}

tasks.named('test') {
	useJUnitPlatform()
}

ext {
    isProd = project.hasProperty('prod') && project.prod == 'true'
}

bootRun {
    if (isProd) {
        systemProperty 'spring.profiles.active', 'prod'
    }
}

tasks.withType(Test) {
    if (isProd) {
        systemProperty 'spring.profiles.active', 'prod'
    }
}
