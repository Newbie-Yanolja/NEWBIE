plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.newbie'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

	// JAXB
	implementation 'javax.xml.bind:jaxb-api:2.3.1'
	implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.1'
	implementation 'javax.activation:activation:1.1.1'

	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'io.awspring.cloud:spring-cloud-starter-aws:2.4.4'

	implementation 'org.springframework.boot:spring-boot-starter-amqp'

	implementation 'commons-io:commons-io:2.14.0'
	implementation 'commons-fileupload:commons-fileupload:1.5'

	// Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

ext {
    isProd = project.hasProperty('prod') && project.prod == 'true'
}

bootRun {
    if (isProd) {
        systemProperty 'spring.profiles.active', 'prod'
    }
}

tasks.withType(Test) {
    if (isProd) {
        systemProperty 'spring.profiles.active', 'prod'
    }
}
